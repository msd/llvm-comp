!IMPORTANT should not be able to define variables with the same name as one of the parameters
!IMPORTANT parameters are not usable

handle empty function body when codegening

check all branches return a value

type checking conforming i.e. integers + floating point -> float + float (coercion)s|

use verifyFunction in function definition codegen (and actually check the result) https://llvm.org/doxygen/Verifier_8h.html


ConjunctionNode & DisjunctionNode
    check actually generates the right clause labels numbers 2..n (n=number of clauses in disjunction)

FunCallNode

FunctionSignature
    change to use llvm types instead of homebrew

Parser::parse_args
    check if current token is type

Parser::parse_rval_addition()
    refactor to make more sense (parses also subtraction)

Parser::parse_expr_stmt()
    check current token

ReturnValueNode
    jump up to function definition to find return type

FEATURES
    new type: double


https://www.llvm.org/docs/ProgrammersManual.html#the-isa-cast-and-dyn-cast-templates
